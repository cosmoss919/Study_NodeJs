<style>
    body {
        font-family: 'Noto Sans KR', sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        padding: 20px;
    }
    .container {
        max-width: 800px;
        margin: 0 auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    h1, h2 {
        color: #333;
        text-align: center;
    }
    .post-info {
        background-color: #f8f9fa;
        padding: 15px;
        border-radius: 4px;
        margin-bottom: 20px;
    }
    .post-content {
        background-color: #fff;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 4px;
        margin-bottom: 20px;
    }
    .button {
        display: inline-block;
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        text-decoration: none;
        margin-right: 10px;
    }
    .button:hover {
        background-color: #0056b3;
    }
    .comment-form {
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 4px;
        margin-bottom: 20px;
    }
    .comment-form input[type="text"],
    .comment-form input[type="password"],
    .comment-form textarea {
        width: 100%;
        padding: 10px;
        margin-bottom: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }
    .comment-list {
        margin-top: 20px;
    }
    .comment {
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 15px;
        margin-bottom: 10px;
    }
    .comment-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
    }
    .home-link {
        display: block;
        text-align: center;
        margin-top: 20px;
        color: #007bff;
        text-decoration: none;
    }
</style>

<div class="container">
    <h1>{{title}}</h1>
    {{#with post}}
        <div class="post-info">
            <h2>{{title}}</h2>
            <p>작성자: <b>{{writer}}</b></p>
            <p>조회수: {{hits}} | 작성일시: {{dateString createdDt}}</p>
            <button class="button" onclick="modifyPost()">수정</button>
            <button class="button" onclick="deletePost()">삭제</button>
        </div>
        <div class="post-content">
            <pre>{{content}}</pre>
        </div>
        <section class="comment-section">
            <h3>{{lengthOfList comments}}개의 댓글이 있습니다.</h3>
            <form class="comment-form" method="post" action="/write-comment">
                <input type="hidden" name="id" value="{{_id}}" />
                <input type="text" name="name" placeholder="이름" required />
                <input type="password" name="password" placeholder="비밀번호" required />
                <textarea name="comment" placeholder="댓글을 입력해 주세요." required></textarea>
                <button class="button" type="submit">댓글쓰기</button>
            </form>
        </section>
        <section class="comment-list">
            {{#each comments}}
                <div class="comment">
                    <div class="comment-header">
                        <span>작성자: <b>{{name}}</b></span>
                        <span>작성 일시: {{dateString createdDt}}</span>
                    </div>
                    <pre>{{comment}}</pre>
                    <button class="button" onclick="deleteComment('{{idx}}')">삭제</button>
                </div>
            {{/each}}
        </section>
    {{/with}}
    <a href="/" class="home-link">목록으로</a>
</div>

<script>
    const postOption = {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
    };

    async function modifyPost() {
        const password = prompt("패스워드를 입력해주세요");
        // 프롬프트에서 취소를 누른 경우 처리
        if(!password) {
            return;
        }

        // check-password API 실행
        const result = await fetch("/check-password", {
            ...postOption,
            body: JSON.stringify({ id: "{{post._id}}", password})
        });

        // json 함수를 실행하는 경우도 await
        const data = await result.json();

        // 패스워드가 맞는 경우 수정 페이지로 이동
        if(data.isExist) {
            document.location = "/modify/{{post._id}}";
        } else {
            alert("패스워드가 올바르지 않습니다.");
        }
    }

    const deleteOption = {
        method: 'DELETE',
        headers: {
            'Content-Type': 'application/json',
        },
    };

    async function deletePost() {
        // 프롬프트로 값 입력받기
        const password = prompt("삭제하려면 패스워드를 입력해주세요");
        // 프롬프트에서 취소를 누른 경우 처리
        if(!password) {
            return;
        }
        const result = await fetch("/delete", {
            ...deleteOption,
            body: JSON.stringify({ id: "{{post._id}}", password})
        });

        const data = await result.json();
        if(!data.isSuccess) {
            alert("삭제에 실패했습니다. 패스워드를 확인해 주세요.");
            return;
        }

        document.location = "/";
    }

    async function deleteComment(idx) {
        const password = prompt(`댓글을 삭제하려면 패스워드를 입력해주세요`);
        if(!password) {
            return;
        }

        const result = await fetch("/delete-comment", {
            ...deleteOption,
            body: JSON.stringify({id: "{{post._id}}", idx, password})
        });

        const data = await result.json();
        if(!data.isSuccess) {
            alert("삭제에 실패했습니다. 패스워드를 확인해주세요.");
            return;
        }

        alert("삭제 성공!");
        document.location.reload();
    }
</script>
